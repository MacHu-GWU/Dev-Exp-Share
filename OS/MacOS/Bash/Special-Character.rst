单引号, 双引号, 反引号, 转义符, 小括号, 中括号, 大括号
==============================================================================

.. contents:: 目录


参考资料: https://www.tldp.org/LDP/abs/html/quotingvar.html

- 单引号: ``'``
- 双引号: ``"``
- 反引号: `````
- 转义符: ``\``
- 小括号: ``()``
- 中括号: ``[]``
- 大括号: ``{}``


单引号 ``'`` 和 双引号 ``"`` 的含义
------------------------------------------------------------------------------

单引号 ``'`` 和 双引号 ``"`` 都是为了解决空格应该被解释为字符串, 还是命令分隔符的问题.

比如你想定义一个变量: ``name=David John``, 这样程序会报错. 正确的做法是 ``name="David John"`` 或是 ``name='David John'``.


单引号 ``'`` 和 双引号 ``"`` 的区别
------------------------------------------------------------------------------

单引号中除了 ``'`` 本身, 其他所有特殊字符的特殊含义都被剥夺了.

双引号相当于没有那么严格的单引号, 除了 ``$`` 表示变量, ````` 表示命令替换, ``\`` 表示.


反引号 ````` 的含义
------------------------------------------------------------------------------

反引号表示命令替换, 也就是说, 反引号包含的内容会被当做命令来对待, 先执行一遍, 然后再跟外层命令合并. ``echo `ls``` 和 ``echo $(ls)`` 是完全等价的. 但是根据最新的 POSIX 规范, 反引号已经被逐渐抛弃, 而要求全部使用 ``$(...)``.


转义符 ``\`` 的含义
------------------------------------------------------------------------------

转移符 ``\`` 如果单独使用, 则是 **换行符**, 常用于非常长的命令, 例如::

    $ cmd ... \
        --option1=value1 \
        --option2=value2 \
        --option3=value3

而通常情况下, 转义符后面都是要跟一个其他字符的, 通常表示将后面跟着的的特殊符号作为普通字符解释. 例如 ``dollar="\$"``.

而在 ``echo`` 和 ``sed`` 命令下, 则是表示特殊符号, 例如 ``\n`` 表示换行, ``\t`` 表示制表符. 其他特殊符号请看这里 https://www.tldp.org/LDP/abs/html/escapingsection.html


小括号 和 大括号
------------------------------------------------------------------------------

- () 对一串命令 **重新开一个子 shell 执行**
- {} 对一串命令 **在当前 shell 执行**

- () 和 {} 都是把一串的命令放在括号里面, 并且 **命令之间用** ``;`` **号隔开**
- () 最后一个命令 **可以不用分号**
- {} 最后一个命令 **必须要用分号**

- {} 的第一个命令和左括号之间必须要有一个空格
- () 里的各命令不必跟括号之间有空格
- () 和 {} 中括号里面的某个命令的重定向只影响该命令, 但括号外的重定向则影响到括号里的所有命令


中括号 和 双中括号
------------------------------------------------------------------------------

中括号:

- [ ] 两个符号左右都要有空格分隔
- 内部操作符与操作变量之间要有空格：如 [“a” = “b” ]
- 字符串比较中，> < 需要写成> \< 进行转义
- [ ] 中字符串或者 ${} 变量尽量使用 ``"`` 扩住, 以避免值未定义引用而出错
- [ ] 中可以使用 –a –o 进行逻辑运算
- [ ] 是bash 内置命令: ``[`` is a shell builtin

双中括号:

- [[ ]] 两个符号左右都要有空格分隔
- 内部操作符与操作变量之间要有空格：如 [[ “a’ = “b” ]]
- 字符串比较中，可以直接使用 > < 无需转义
- [[ ]] 中字符串或者 ${ }变量尽量使用 ``"`` 扩住, 如未使用 ``"`` 会进行模式和元字符匹配
- [[ ]] 内部可以使用 ``&&``, ``||`` 进行逻辑运算
- [[ ]] 是bash keyword: ``[[ is a shell keyword``
