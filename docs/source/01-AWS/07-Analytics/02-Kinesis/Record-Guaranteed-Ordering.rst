Record Guaranteed Ordering
==============================================================================

作为流数据系统, 能按照写入顺序读取数据在很多场景下是必须的. Kinesis 提供了 Shard 级别的顺序严格一致性.

举例来说, 你有多条记录顺序是 r1, r2, r3 (r1 = Record1), 分别到达了 s1, s2, s3 (s1 = Shard1), 那么你在 GetRecords 的时候获得的数据里顺序可能是乱的. 如果你要保证顺序是一致的, 那么 r1, r2, r3 的 ``PartitionKey`` 需要一致才能保证写入到同一个 Shard 上.

拿电商系统的数据汇总 Stream 举例, 用户手机上的, 电脑上操作的记录都会被送到这个 stream 上, 而你要求同一个 order 相关的数据的 consumer 程序需要严格按照顺序读取, 那么你需要用 order id 作为 ``PartitionKey`` 即可.
