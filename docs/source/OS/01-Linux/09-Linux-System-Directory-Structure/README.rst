Linux System Directory Structure (Linux 系统文件目录结构)
==============================================================================

.. contents::
    :depth: 1
    :local:


/bin
------------------------------------------------------------------------------
bin 是 binaries 二进制文件的缩写, 这个目录存放着最经常使用的命令. 例如 cd, ls, cp, rm


/boot
------------------------------------------------------------------------------
这里存放的是启动 Linux 时使用的一些核心文件, 包括一些连接文件以及镜像文件.


/dev
------------------------------------------------------------------------------
是 Device (设备) 的缩写, 该目录下存放的是 Linux 的外部设备, 在 Linux 中访问设备的方式和访问文件的方式是相同的.


/etc
------------------------------------------------------------------------------
是 Etcetera (等等) 的缩写, 这个目录用来存放所有的系统管理所需要的配置文件和子目录.


/home
------------------------------------------------------------------------------
用户的主目录, 在 Linux 中, 每个用户都有一个自己的目录, 一般该目录名是以用户的账号命名的.


/lib
------------------------------------------------------------------------------
lib 是 Library (库) 的缩写, 这个目录里存放着系统最基本的动态连接共享库, 其作用类似于 Windows 里的 DLL 文件. 几乎所有的应用程序都需要用到这些共享库.


/lost+found
------------------------------------------------------------------------------
这个目录一般情况下是空的, 当系统非法关机后, 这里就存放了一些文件.


/media
------------------------------------------------------------------------------
linux 系统会自动识别一些设备, 例如U盘, 光驱等等, 当识别后, Linux 会把识别的设备挂载到这个目录下.


/mnt
------------------------------------------------------------------------------
mnt 是 Mount (挂载) 的缩写, 系统提供该目录是为了让用户临时挂载别的文件系统的, 我们可以将光驱挂载在 /mnt/ 上, 然后进入该目录就可以查看光驱里的内容了.


/opt
------------------------------------------------------------------------------
opt 是 Option (选项) 的缩写, 这是给主机额外安装软件所摆放的目录, 比如你安装一个ORACLE数据库则就可以放到这个目录下. 默认是空的.


/proc
------------------------------------------------------------------------------
proc 是 Processes (进程) 的缩写, /proc 是一种伪文件系统 (也即虚拟文件系统), 存储的是当前内核运行状态的一系列特殊文件, 这个目录是一个虚拟的目录, 它是系统内存的映射, 我们可以通过直接访问这个目录来获取系统信息.

这个目录的内容不在硬盘上而是在内存里, 我们也可以直接修改里面的某些文件, 比如可以通过下面的命令来屏蔽主机的ping命令, 使别人无法ping你的机器::

    echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_all


/root
------------------------------------------------------------------------------
该目录为系统管理员, 也称作超级权限者的用户主目录.


/run
------------------------------------------------------------------------------
是一个临时文件系统, 存储系统启动以来的信息. 当系统重启时, 这个目录下的文件应该被删掉或清除. 如果你的系统上有 /var/run 目录, 应该让它指向 /run.


/sbin
------------------------------------------------------------------------------
s 就是 Super User 的意思, 是 Superuser Binaries (超级用户的二进制文件) 的缩写, 这里存放的是系统管理员使用的系统管理程序.


/selinux
------------------------------------------------------------------------------
这个目录是 Redhat/CentOS 所特有的目录, Selinux 是一个安全机制, 类似于 windows 的防火墙, 但是这套机制比较复杂, 这个目录就是存放selinux相关的文件的.


/srv
------------------------------------------------------------------------------
srv 是 service 的缩写, 该目录存放一些服务启动之后需要提取的数据.


/sys
------------------------------------------------------------------------------
这是 Linux2.6 内核的一个很大的变化. 该目录下安装了 2.6 内核中新出现的一个文件系统 sysfs.

sysfs 文件系统集成了下面3种文件系统的信息: 针对进程信息的 proc 文件系统, 针对设备的 devfs 文件系统以及针对伪终端的 devpts 文件系统.

该文件系统是内核设备树的一个直观反映.

当一个内核对象被创建的时候, 对应的文件和目录也在内核对象子系统中被创建.


/tmp
------------------------------------------------------------------------------
tmp 是 temporary (临时) 的缩写, 这个目录是用来存放一些临时文件的.


/usr
------------------------------------------------------------------------------
usr 是 unix shared resources (共享资源) 的缩写, 这是一个非常重要的目录, 用户的很多应用程序和文件都放在这个目录下, 类似于 windows 下的 program files 目录.


/usr/bin
------------------------------------------------------------------------------
系统用户使用的应用程序.


/usr/sbin
------------------------------------------------------------------------------
超级用户使用的比较高级的管理程序和系统守护程序.


/usr/src
------------------------------------------------------------------------------
内核源代码默认的放置目录.


/var
------------------------------------------------------------------------------
var 是 variable (变量) 的缩写, 这个目录中存放着在不断扩充着的东西, 我们习惯将那些经常被修改的目录放在这个目录下. 包括各种日志文件.


总结
------------------------------------------------------------------------------
在 Linux 系统中, 有几个目录是比较重要的, 平时需要注意不要误删除或者随意更改内部文件.

- ``/etc``: 上边也提到了, 这个是系统中的配置文件, 如果你更改了该目录下的某个文件可能会导致系统不能启动.
- ``/bin``, ``/sbin``, ``/usr/bin``, ``/usr/sbin``: 这是系统预设的可执行文件的放置目录, 比如 ``ls`` 就是在 ``/bin/ls`` 目录下的. 值得提出的是, ``/bin``, ``/usr/bin`` 是给系统用户使用的指令 (除root外的通用户), 而 ``/sbin``, ``/usr/sbin`` 则是给 root 使用的指令.
- ``/var``: 这是一个非常重要的目录, 系统上跑了很多程序, 那么每个程序都会有相应的日志产生, 而这些日志就被记录到这个目录下, 具体在 ``/var/log`` 目录下, 另外 mail 的预设放置也是在这里.


``/bin``, ``/sbin``, ``/usr/bin``, ``/usr/sbin`` 的区别
------------------------------------------------------------------------------
这些目录都是存放命令的, 首先区别下 /sbin 和 /bin:

从命令功能来看, /sbin 下的命令属于基本的系统命令, 如shutdown, reboot, 用于启动系统, 修复系统, /bin下存放一些普通的基本命令, 如ls,chmod等, 这些命令在Linux系统里的配置文件脚本里经常用到. 

从用户权限的角度看, /sbin 目录下的命令通常只有管理员才可以运行, /bin 下的命令管理员和一般的用户都可以使用. 

从可运行时间角度看, /sbin,/bin能够在挂载其他文件系统前就可以使用. 

而 /usr/bin, /usr/sbin 与 /sbin /bin 目录的区别在于: 

/bin, /sbin目录是在系统启动后挂载到根文件系统中的, 所以/sbin, /bin目录必须和根文件系统在同一分区;

/usr/bin, usr/sbin 可以和根文件系统不在一个分区. 

/usr/sbin存放的一些非必须的系统命令; /usr/bin存放一些用户命令, 如led(控制LED灯的). 

转下一位网友的解读, 个人认为诠释得很到位: 

/bin 是系统的一些指令. bin 为 binary 的简写, 主要放置一些系统的必备执行档例如: cat, cp, chmod df, dmesg, gzip, kill, ls, mkdir, more, mount, rm, su, tar 等.

/sbin 一般是指超级用户指令. 主要放置一些系统管理的必备程式例如: cfdisk, dhcpcd, dump, e2fsck, fdisk, halt, ifconfig, ifup,  ifdown, init, insmod, lilo, lsmod, mke2fs, modprobe, quotacheck, reboot, rmmod, runlevel, shutdown 等.

/usr/bin 是你在后期安装的一些软件的运行脚本. 主要放置一些应用软体工具的必备执行档例如 c++, g++, gcc, chdrv, diff, dig, du, eject, elm, free, gnome*,  gzip, htpasswd, kfm, ktop, last, less, locale, m4, make, man, mcopy, ncftp, newaliases, nslookup passwd, quota, smb*, wget等.

/usr/sbin 放置一些用户安装的系统管理的必备程式例如: dhcpd, httpd, imap, in.*d, inetd, lpd, named, netconfig, nmbd, samba, sendmail, squid, swap, tcpd, tcpdump等.

如果新装的系统, 运行一些很正常的诸如: shutdown, fdisk 的命令时, 悍然提示: bash:command not found. 那么

首先就要考虑root 的$PATH里是否已经包含了这些环境变量.

可以查看PATH, 如果是: PATH=$PATH:$HOME/bin则需要添加成如下::

    PATH=$PATH:$HOME/bin:/sbin:/usr/bin:/usr/sbin
